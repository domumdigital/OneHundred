{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "vrfCoordinator",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subscriptionId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "keyHash",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AdminControlsLocked",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ContractFeePercentageTooHigh",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmergencyFundSweepFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "GamePaused",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InClosingWindow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "IncorrectPayment",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientWithdrawableBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidCount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidNumber",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidRequestId",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidRoundRange",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoPayouts",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoWinnerPercentagesMustSum",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotReadyForNewRound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotReadyForRandomGeneration",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NumberAlreadyGenerated",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NumberAlreadySelected",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NumberGenerationFailed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "have",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "want",
						"type": "address"
					}
				],
				"name": "OnlyCoordinatorCanFulfill",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "have",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "coordinator",
						"type": "address"
					}
				],
				"name": "OnlyOwnerOrCoordinator",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OwnerTransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RoundExceedsCurrentRound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RoundNotActive",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RoundNotReadyToEnd",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "StatisticsNotVisible",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TooManySelections",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UnauthorizedUpkeep",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "WinnerPercentagesMustSum",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "WouldExceedMaxSelections",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroNumbersSelected",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroWithdrawalAmount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ContractFunded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "vrfCoordinator",
						"type": "address"
					}
				],
				"name": "CoordinatorSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "actionType",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "EmergencyActionExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EmergencyFundSwept",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum OneHundred.GameState",
						"name": "previousState",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum OneHundred.GameState",
						"name": "newState",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "GameStateChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8[]",
						"name": "numbers",
						"type": "uint8[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"name": "NumberSelected",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "OwnerWithdrawal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "parameterName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "updater",
						"type": "address"
					}
				],
				"name": "ParametersUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[2]",
						"name": "runnerUps",
						"type": "address[2]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "winnerPrize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "runnerUpPrize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "winningNumberSelected",
						"type": "bool"
					}
				],
				"name": "PrizesDistributed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "RandomNumberRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "winningNumber",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "method",
						"type": "string"
					}
				],
				"name": "RandomWinnerGenerated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "potSize",
						"type": "uint256"
					}
				],
				"name": "RoundEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "firstPlayer",
						"type": "address"
					}
				],
				"name": "RoundStarted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "action",
						"type": "uint256"
					}
				],
				"name": "UpkeepAttempted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "UpkeepFailed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "winningNumber",
						"type": "uint8"
					}
				],
				"name": "WinningNumberGenerated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					}
				],
				"name": "WinningsClaimed",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminControlsLocked",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "automationForwarder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "checkData",
						"type": "bytes"
					}
				],
				"name": "checkUpkeep",
				"outputs": [
					{
						"internalType": "bool",
						"name": "upkeepNeeded",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "performData",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimPayouts",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentRoundNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "generateRandomWinner",
						"type": "bool"
					}
				],
				"name": "emergencyCompleteRound",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OneHundred.GameState",
						"name": "newState",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "generateRandomWinner",
						"type": "bool"
					}
				],
				"name": "emergencyForceState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "action",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "generateRandomWinner",
						"type": "bool"
					}
				],
				"name": "emergencyPerformUpkeep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "generateRandomWinner",
						"type": "bool"
					}
				],
				"name": "emergencyResetGame",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					}
				],
				"name": "emergencySweepRoundFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdrawAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameActive",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameConfig",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "roundDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "restPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "selectionCost",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "maxSelectionsPerPlayer",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "totalNumbers",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "closingWindow",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameState",
				"outputs": [
					{
						"internalType": "enum OneHundred.GameState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAvailableNumbers",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getContractBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGameState",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "roundNum",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timeRemaining",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentPot",
						"type": "uint256"
					},
					{
						"internalType": "enum OneHundred.GameState",
						"name": "state",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "count",
						"type": "uint8"
					}
				],
				"name": "getHotColdNumbers",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "hot",
						"type": "uint8[]"
					},
					{
						"internalType": "uint8[]",
						"name": "cold",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMinimumRequiredBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "startRound",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endRound",
						"type": "uint256"
					}
				],
				"name": "getPlayerHistory",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "roundNumbers",
						"type": "uint256[]"
					},
					{
						"internalType": "uint8[][]",
						"name": "selections",
						"type": "uint8[][]"
					},
					{
						"internalType": "uint256[]",
						"name": "wagered",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					}
				],
				"name": "getPlayerSelectionsForRound",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "",
						"type": "uint8[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "count",
						"type": "uint8"
					}
				],
				"name": "getRecentRounds",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "roundNumbers",
						"type": "uint256[]"
					},
					{
						"internalType": "uint8[]",
						"name": "winningNumbers",
						"type": "uint8[]"
					},
					{
						"internalType": "uint256[]",
						"name": "potSizes",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "winners",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "roundNumber",
						"type": "uint256"
					}
				],
				"name": "getRoundInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "potSize",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "winningNumber",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"internalType": "address[2]",
						"name": "runnerUps",
						"type": "address[2]"
					},
					{
						"internalType": "bool",
						"name": "completed",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "numberGenerated",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "isNumberSelected",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockAdminControls",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "numberToPlayer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ownerWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pendingPayouts",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "performData",
						"type": "bytes"
					}
				],
				"name": "performUpkeep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "playerSelectionsPerRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalWagered",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "hasClaimed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prizeConfig",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "winnerPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "runnerUpPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "noWinnerRunnerUpPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "houseWinnerSelectedPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "houseNoWinnerSelectedPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "contractFeePercentage",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "rawFulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "roundEndTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "roundStartTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rounds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "potSize",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "winningNumber",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "flags",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_vrfCoordinator",
				"outputs": [
					{
						"internalType": "contract IVRFCoordinatorV2Plus",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "safetyConfig",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "vrfRequestBuffer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "safetyBufferPercentage",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "statsVisibleToPlayers",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8[]",
						"name": "numbers",
						"type": "uint8[]"
					}
				],
				"name": "selectNumbers",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_forwarder",
						"type": "address"
					}
				],
				"name": "setAutomationForwarder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_vrfCoordinator",
						"type": "address"
					}
				],
				"name": "setCoordinator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_gameActive",
						"type": "bool"
					}
				],
				"name": "setGameActive",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_statsVisibleToPlayers",
						"type": "bool"
					}
				],
				"name": "setStatsVisibleToPlayers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_restPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_selectionCost",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_maxSelectionsPerPlayer",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_closingWindow",
						"type": "uint8"
					}
				],
				"name": "updateGameParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "_winnerPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_runnerUpPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_noWinnerRunnerUpPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_houseWinnerSelectedPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_houseNoWinnerSelectedPercentage",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_contractFeePercentage",
						"type": "uint16"
					}
				],
				"name": "updatePrizeParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_vrfRequestBuffer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_safetyBufferPercentage",
						"type": "uint256"
					}
				],
				"name": "updateSafetyParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "subscriptionId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "keyHash",
						"type": "bytes32"
					}
				],
				"name": "updateVrfParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "Number guessing game using Chainlink VRF 2.5 and Automation with optimized storage. Built by Domum Digital with C3.7E.",
			"kind": "dev",
			"methods": {
				"checkUpkeep(bytes)": {
					"details": "Chainlink Automation checkUpkeep - Following best practices This function checks if an upkeep is needed based on the current state of the contract"
				},
				"claimPayouts()": {
					"details": "Claim pending payouts"
				},
				"constructor": {
					"details": "Constructor with Chainlink VRF 2.5 setup",
					"params": {
						"keyHash": "The key hash for the VRF request",
						"subscriptionId": "The VRF subscription ID",
						"vrfCoordinator": "The address of the VRF coordinator"
					}
				},
				"emergencyCompleteRound(uint256,bool)": {
					"details": "Force complete a specific round",
					"params": {
						"generateRandomWinner": "Whether to generate a random winner",
						"roundNumber": "The round to complete"
					}
				},
				"emergencyForceState(uint8,bool)": {
					"details": "Force transition to a specific game state",
					"params": {
						"generateRandomWinner": "Whether to generate a random winner for the current round",
						"newState": "The desired game state"
					}
				},
				"emergencyPerformUpkeep(uint256,bool)": {
					"details": "Force execute upkeep",
					"params": {
						"action": "The upkeep action to perform (1=end round, 2=request random, 3=start new round)",
						"generateRandomWinner": "Whether to generate a random winner if needed"
					}
				},
				"emergencyResetGame(bool)": {
					"details": "Reset the game to initial state",
					"params": {
						"generateRandomWinner": "Whether to generate a random winner for the current round before resetting"
					}
				},
				"emergencySweepRoundFunds(uint256)": {
					"details": "Separate function to sweep funds from a round"
				},
				"emergencyWithdraw()": {
					"details": "Emergency withdrawal (legacy function)"
				},
				"emergencyWithdrawAll()": {
					"details": "Emergency withdrawal for testing - no safety buffer restriction"
				},
				"getAvailableNumbers()": {
					"details": "Get available numbers"
				},
				"getContractBalance()": {
					"details": "Get contract balance"
				},
				"getGameState()": {
					"details": "Get current game state"
				},
				"getHotColdNumbers(uint8)": {
					"details": "Get hot and cold numbers - optimized to use precomputed arrays"
				},
				"getMinimumRequiredBalance()": {
					"details": "Get minimum required balance"
				},
				"getPlayerHistory(address,uint256,uint256)": {
					"details": "Get player history"
				},
				"getPlayerSelectionsForRound(address,uint256)": {
					"details": "Get player selections"
				},
				"getRecentRounds(uint8)": {
					"details": "Get recent rounds"
				},
				"getRoundInfo(uint256)": {
					"details": "Get round info"
				},
				"lockAdminControls()": {
					"details": "Lock admin controls permanently"
				},
				"ownerWithdraw(uint256)": {
					"details": "Owner withdrawal"
				},
				"performUpkeep(bytes)": {
					"details": "Chainlink Automation performUpkeep with authorization This function is called by the Chainlink Automation network when checkUpkeep returns true Validate conditions again to prevent issues with race conditions"
				},
				"selectNumbers(uint8[])": {
					"details": "Select numbers for the current round"
				},
				"setAutomationForwarder(address)": {
					"details": "Set the Chainlink Automation forwarder address"
				},
				"setGameActive(bool)": {
					"details": "Set game active/paused"
				},
				"setStatsVisibleToPlayers(bool)": {
					"details": "Set stats visibility"
				},
				"updateGameParameters(uint256,uint256,uint256,uint8,uint8)": {
					"details": "Update game parameters"
				},
				"updatePrizeParameters(uint16,uint16,uint16,uint16,uint16,uint16)": {
					"details": "Update prize parameters"
				},
				"updateSafetyParameters(uint256,uint256)": {
					"details": "Update safety parameters"
				},
				"updateVrfParameters(uint256,bytes32)": {
					"details": "Update VRF parameters"
				}
			},
			"title": "OneHundred",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptOwnership()": {
					"notice": "Allows an ownership transfer to be completed by the recipient."
				},
				"emergencyCompleteRound(uint256,bool)": {
					"notice": "This emergency function allows resolving a stuck round"
				},
				"emergencyForceState(uint8,bool)": {
					"notice": "This emergency function allows recovering from a stuck state"
				},
				"emergencyPerformUpkeep(uint256,bool)": {
					"notice": "Allows manually triggering the automation logic"
				},
				"emergencyResetGame(bool)": {
					"notice": "This emergency function allows completely resetting the game state"
				},
				"emergencySweepRoundFunds(uint256)": {
					"notice": "Used for emergency management without changing game state"
				},
				"owner()": {
					"notice": "Get the current owner"
				},
				"setAutomationForwarder(address)": {
					"notice": "This follows Chainlink's best practice for securing performUpkeep"
				},
				"setCoordinator(address)": {
					"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
				},
				"transferOwnership(address)": {
					"notice": "Allows an owner to begin transferring ownership to a new address."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"OneHundred_Base_Sepolia/OneHundred_0.1.0.sol": "OneHundred"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
			"keccak256": "0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861",
			"license": "MIT",
			"urls": [
				"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e",
				"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B"
			]
		},
		"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
			"keccak256": "0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8",
			"license": "MIT",
			"urls": [
				"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a",
				"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT"
			]
		},
		"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
			"keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
			"license": "MIT",
			"urls": [
				"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
				"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
			"keccak256": "0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4",
				"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
			"keccak256": "0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e",
				"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
			"keccak256": "0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85",
			"license": "MIT",
			"urls": [
				"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb",
				"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
			"keccak256": "0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0",
			"license": "MIT",
			"urls": [
				"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8",
				"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
			"keccak256": "0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6",
			"license": "MIT",
			"urls": [
				"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d",
				"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
				"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
			]
		},
		"OneHundred_Base_Sepolia/OneHundred_0.1.0.sol": {
			"keccak256": "0x70e771bf4d47b1388d27f59b57179cc8c0ade8a35114081d1e43fb5005916b93",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f7de2930aeb1e4398cac8df497de0c8f892541819db2c8e208c780e97c1773c",
				"dweb:/ipfs/QmZ5FGAndWUmapCLFZCPA4VPkuGpVKuTZFmXJpJAWbiYQm"
			]
		}
	},
	"version": 1
}